name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
      CONTAINER_REGISTRY_ENDPOINT:  ${{secrets.CONTAINER_REGISTRY_ENDPOINT}}
      USERNAME: ${{secrets.USERNAME}}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Scaleway Container Registry
      run: echo ${{ secrets.SCW_SECRET_KEY}} | docker login rg.fr-par.scw.cloud/atut-group-1 -u ${{secrets.SCW_SECRET_KEY}} --password-stdin


      - name: Get Commit Hash
        id: vars
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Echo Secret
        run: echo "${{secrets.SCW_SECRET_KEY}}"

      - name: Make scripts executable
        run: chmod +x ./scripts/*.sh


      - name: Login to Scaleway Container Registry
        env:
          SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
          COMMIT_HASH: ${{ env.COMMIT_HASH }}
        run: ./scripts/docker-login.sh


      - name: Build and Tag the Docker images
        env:
          COMMIT_HASH: ${{ env.COMMIT_HASH }}
        run: ./scripts/build-tag.sh




      - name: Push the Docker Images
        env:
          COMMIT_HASH: ${{ env.COMMIT_HASH }}
        run: ./scripts/push-images.sh



  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@v1.0.3
        env:
          COMMIT_HASH: ${{ env.COMMIT_HASH }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            APP_DIR="/home/${{ secrets.USERNAME }}/app"
            if [ -d "$APP_DIR" ]; then
              rm -rf "$APP_DIR"
              echo "Existing directory removed."
            fi
            mkdir -p "$APP_DIR"
            echo "Directory created at $APP_DIR."
            cd "$APP_DIR"
            git clone  https://github.com/abrahamkoloboe27/ATUT-DevOps.git 
            echo "Repository cloned."
            docker compose pull
            docker compose up -d --remove-orphans
            docker system prune -f
            docker ps -a
            echo "Docker Compose up successfully."

    - name: Execute Deployment Script on Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        script: |
          COMMIT_HASH=${{ env.COMMIT_HASH }}
          mkdir -p /app/$COMMIT_HASH
          cd /app/$COMMIT_HASH
          
          cat <<EOF > deploy.sh
            #!/bin/bash
            mkdir -p /app/$COMMIT_HASH
            cd /app/$COMMIT_HASH
            cat << EOL > docker-compose.yml
            services:
              api:
                image: rg.fr-par.scw.cloud/atut-group-1/hash-test-backend:${{ env.COMMIT_HASH }}
                ports:
                  - "8000:8000"
                volumes:
                  - ./backend:/backend
                container_name: api
                networks:
                  - app_network
                restart: always

              app:
                image: rg.fr-par.scw.cloud/atut-group-1/hash-test-frontend:${{ env.COMMIT_HASH }}
                ports:
                  - "8501:8501"
                volumes:
                  - ./frontend:/frontend
                container_name: frontend
                networks:
                  - app_network
                restart: always

            networks:
              app_network:
                driver: bridge
          EOF
          chmod +x deploy.sh
          ./deploy.sh


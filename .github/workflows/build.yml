name: Build & Deploy to Scaleway

on:
  push:
    branches:
      - main
      - test
  pull_request:
      branches:
        - test 
        - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Scaleway Container Registry
        run: echo ${{ secrets.SCW_SECRET_KEY}} | docker login rg.fr-par.scw.cloud/atut-group-1 -u ${{secrets.SCW_SECRET_KEY}} --password-stdin

      - name: Build the Docker image - Backend
        working-directory: ./backend
        run: docker build . -t ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/backend

      - name: Push the Docker Image - Backend
        run: docker push ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/backend
  
      - name: Build the Docker image - Frontend
        working-directory: ./frontend
        run: docker build . -t ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/frontend

      - name: Push the Docker Image - Frontend
        run: docker push ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/frontend
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            docker pull rg.fr-par.scw.cloud/atut-group-1/backend
            docker pull rg.fr-par.scw.cloud/atut-group-1/frontend
            echo "Docker images pulled successfully."

            if [ -d "/home/${{ secrets.USERNAME }}/app" ]; then
              rm -rf /home/${{ secrets.USERNAME }}/app
            fi
            mkdir -p /home/${{ secrets.USERNAME }}/app
            echo "Directory created or recreated."

            cd /home/${{ secrets.USERNAME }}/app
            curl -O ${{ secrets.DOCKER_COMPOSE_FILE }}
            echo "Repository cloned."
            ls

            echo "Docker Compose directory created and accessed."
            docker compose pull
            docker compose up -d --remove-orphans
            docker system prune -f
            docker ps -a
            echo "Docker Compose up successfully."